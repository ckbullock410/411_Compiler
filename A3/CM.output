Terminals unused in grammar

   ENDFILE
   ERROR
   BOOL
   TRUE
   FALSE
   NOT
   AND
   OR


State 111 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 $@1: %empty

    7 var_declaration: INT ID $@1 SEMI

    8 $@2: %empty

    9 $@3: %empty

   10 var_declaration: INT ID $@2 LBRACK NUM $@3 RBRACK SEMI

   11 $@4: %empty

   12 fun_declaration: INT ID $@4 LPAREN params RPAREN compound_stmt

   13 $@5: %empty

   14 fun_declaration: VOID ID $@5 LPAREN params RPAREN compound_stmt

   15 params: param_list
   16       | VOID

   17 param_list: param_list COMMA param
   18           | param

   19 param: INT ID

   20 $@6: %empty

   21 param: INT ID $@6 LBRACK RBRACK

   22 compound_stmt: LCBRACK local_declarations statement_list RCBRACK

   23 local_declarations: local_declarations var_declaration
   24                   | %empty

   25 statement_list: statement_list statement
   26               | %empty

   27 statement: expression_stmt
   28          | compound_stmt
   29          | selection_stmt
   30          | iteration_stmt
   31          | return_stmt

   32 expression_stmt: expression SEMI
   33                | SEMI

   34 selection_stmt: IF LPAREN expression RPAREN statement
   35               | IF LPAREN expression RPAREN statement ELSE statement

   36 iteration_stmt: WHILE LPAREN expression RPAREN statement

   37 return_stmt: RETURN SEMI
   38            | RETURN expression SEMI

   39 expression: var ASSIGN expression
   40           | simple_expression

   41 var: ID

   42 $@7: %empty

   43 var: ID $@7 LBRACK expression RBRACK

   44 simple_expression: additive_expression LE additive_expression
   45                  | additive_expression LT additive_expression
   46                  | additive_expression GT additive_expression
   47                  | additive_expression GE additive_expression
   48                  | additive_expression EQ additive_expression
   49                  | additive_expression NQ additive_expression
   50                  | additive_expression

   51 additive_expression: additive_expression PLUS term
   52                    | additive_expression MINUS term
   53                    | term

   54 term: term TIMES factor
   55     | term OVER factor
   56     | factor

   57 factor: LPAREN expression RPAREN
   58       | var
   59       | call
   60       | NUM
   61       | error

   62 $@8: %empty

   63 call: ID $@8 LPAREN args RPAREN

   64 args: arg_list
   65     | %empty

   66 arg_list: arg_list COMMA expression
   67         | expression


Terminals, with rules where they appear

$end (0) 0
error (256) 61
ENDFILE (258)
ERROR (259)
IF (260) 34 35
ELSE (261) 35
WHILE (262) 36
RETURN (263) 37 38
VOID (264) 14 16
BOOL (265)
TRUE (266)
FALSE (267)
INT (268) 7 10 12 19 21
NOT (269)
ID (270) 7 10 12 14 19 21 41 43 63
NUM (271) 10 60
ASSIGN (272) 39
EQ (273) 48
NQ (274) 49
LT (275) 45
GT (276) 46
LE (277) 44
GE (278) 47
PLUS (279) 51
MINUS (280) 52
TIMES (281) 54
OVER (282) 55
LPAREN (283) 12 14 34 35 36 57 63
RPAREN (284) 12 14 34 35 36 57 63
SEMI (285) 7 10 32 33 37 38
COMMA (286) 17 66
LBRACK (287) 10 21 43
RBRACK (288) 10 21 43
LCBRACK (289) 22
RCBRACK (290) 22
AND (291)
OR (292)


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1, on right: 0
declaration_list (40)
    on left: 2 3, on right: 1 2
declaration (41)
    on left: 4 5, on right: 2 3
var_declaration (42)
    on left: 7 10, on right: 4 23
$@1 (43)
    on left: 6, on right: 7
$@2 (44)
    on left: 8, on right: 10
$@3 (45)
    on left: 9, on right: 10
fun_declaration (46)
    on left: 12 14, on right: 5
$@4 (47)
    on left: 11, on right: 12
$@5 (48)
    on left: 13, on right: 14
params (49)
    on left: 15 16, on right: 12 14
param_list (50)
    on left: 17 18, on right: 15 17
param (51)
    on left: 19 21, on right: 17 18
$@6 (52)
    on left: 20, on right: 21
compound_stmt (53)
    on left: 22, on right: 12 14 28
local_declarations (54)
    on left: 23 24, on right: 22 23
statement_list (55)
    on left: 25 26, on right: 22 25
statement (56)
    on left: 27 28 29 30 31, on right: 25 34 35 36
expression_stmt (57)
    on left: 32 33, on right: 27
selection_stmt (58)
    on left: 34 35, on right: 29
iteration_stmt (59)
    on left: 36, on right: 30
return_stmt (60)
    on left: 37 38, on right: 31
expression (61)
    on left: 39 40, on right: 32 34 35 36 38 39 43 57 66 67
var (62)
    on left: 41 43, on right: 39 58
$@7 (63)
    on left: 42, on right: 43
simple_expression (64)
    on left: 44 45 46 47 48 49 50, on right: 40
additive_expression (65)
    on left: 51 52 53, on right: 44 45 46 47 48 49 50 51 52
term (66)
    on left: 54 55 56, on right: 51 52 53 54 55
factor (67)
    on left: 57 58 59 60 61, on right: 54 55 56
call (68)
    on left: 63, on right: 59
$@8 (69)
    on left: 62, on right: 63
args (70)
    on left: 64 65, on right: 63
arg_list (71)
    on left: 66 67, on right: 64 66


State 0

    0 $accept: . program $end

    VOID  shift, and go to state 1
    INT   shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    fun_declaration   go to state 7


State 1

   14 fun_declaration: VOID . ID $@5 LPAREN params RPAREN compound_stmt

    ID  shift, and go to state 8


State 2

    7 var_declaration: INT . ID $@1 SEMI
   10                | INT . ID $@2 LBRACK NUM $@3 RBRACK SEMI
   12 fun_declaration: INT . ID $@4 LPAREN params RPAREN compound_stmt

    ID  shift, and go to state 9


State 3

    0 $accept: program . $end

    $end  shift, and go to state 10


State 4

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    VOID  shift, and go to state 1
    INT   shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 11
    var_declaration  go to state 6
    fun_declaration  go to state 7


State 5

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


State 6

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


State 7

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


State 8

   14 fun_declaration: VOID ID . $@5 LPAREN params RPAREN compound_stmt

    $default  reduce using rule 13 ($@5)

    $@5  go to state 12


State 9

    7 var_declaration: INT ID . $@1 SEMI
   10                | INT ID . $@2 LBRACK NUM $@3 RBRACK SEMI
   12 fun_declaration: INT ID . $@4 LPAREN params RPAREN compound_stmt

    LPAREN    reduce using rule 11 ($@4)
    LBRACK    reduce using rule 8 ($@2)
    $default  reduce using rule 6 ($@1)

    $@1  go to state 13
    $@2  go to state 14
    $@4  go to state 15


State 10

    0 $accept: program $end .

    $default  accept


State 11

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


State 12

   14 fun_declaration: VOID ID $@5 . LPAREN params RPAREN compound_stmt

    LPAREN  shift, and go to state 16


State 13

    7 var_declaration: INT ID $@1 . SEMI

    SEMI  shift, and go to state 17


State 14

   10 var_declaration: INT ID $@2 . LBRACK NUM $@3 RBRACK SEMI

    LBRACK  shift, and go to state 18


State 15

   12 fun_declaration: INT ID $@4 . LPAREN params RPAREN compound_stmt

    LPAREN  shift, and go to state 19


State 16

   14 fun_declaration: VOID ID $@5 LPAREN . params RPAREN compound_stmt

    VOID  shift, and go to state 20
    INT   shift, and go to state 21

    params      go to state 22
    param_list  go to state 23
    param       go to state 24


State 17

    7 var_declaration: INT ID $@1 SEMI .

    $default  reduce using rule 7 (var_declaration)


State 18

   10 var_declaration: INT ID $@2 LBRACK . NUM $@3 RBRACK SEMI

    NUM  shift, and go to state 25


State 19

   12 fun_declaration: INT ID $@4 LPAREN . params RPAREN compound_stmt

    VOID  shift, and go to state 20
    INT   shift, and go to state 21

    params      go to state 26
    param_list  go to state 23
    param       go to state 24


State 20

   16 params: VOID .

    $default  reduce using rule 16 (params)


State 21

   19 param: INT . ID
   21      | INT . ID $@6 LBRACK RBRACK

    ID  shift, and go to state 27


State 22

   14 fun_declaration: VOID ID $@5 LPAREN params . RPAREN compound_stmt

    RPAREN  shift, and go to state 28


State 23

   15 params: param_list .
   17 param_list: param_list . COMMA param

    COMMA  shift, and go to state 29

    $default  reduce using rule 15 (params)


State 24

   18 param_list: param .

    $default  reduce using rule 18 (param_list)


State 25

   10 var_declaration: INT ID $@2 LBRACK NUM . $@3 RBRACK SEMI

    $default  reduce using rule 9 ($@3)

    $@3  go to state 30


State 26

   12 fun_declaration: INT ID $@4 LPAREN params . RPAREN compound_stmt

    RPAREN  shift, and go to state 31


State 27

   19 param: INT ID .
   21      | INT ID . $@6 LBRACK RBRACK

    LBRACK    reduce using rule 20 ($@6)
    $default  reduce using rule 19 (param)

    $@6  go to state 32


State 28

   14 fun_declaration: VOID ID $@5 LPAREN params RPAREN . compound_stmt

    LCBRACK  shift, and go to state 33

    compound_stmt  go to state 34


State 29

   17 param_list: param_list COMMA . param

    INT  shift, and go to state 21

    param  go to state 35


State 30

   10 var_declaration: INT ID $@2 LBRACK NUM $@3 . RBRACK SEMI

    RBRACK  shift, and go to state 36


State 31

   12 fun_declaration: INT ID $@4 LPAREN params RPAREN . compound_stmt

    LCBRACK  shift, and go to state 33

    compound_stmt  go to state 37


State 32

   21 param: INT ID $@6 . LBRACK RBRACK

    LBRACK  shift, and go to state 38


State 33

   22 compound_stmt: LCBRACK . local_declarations statement_list RCBRACK

    $default  reduce using rule 24 (local_declarations)

    local_declarations  go to state 39


State 34

   14 fun_declaration: VOID ID $@5 LPAREN params RPAREN compound_stmt .

    $default  reduce using rule 14 (fun_declaration)


State 35

   17 param_list: param_list COMMA param .

    $default  reduce using rule 17 (param_list)


State 36

   10 var_declaration: INT ID $@2 LBRACK NUM $@3 RBRACK . SEMI

    SEMI  shift, and go to state 40


State 37

   12 fun_declaration: INT ID $@4 LPAREN params RPAREN compound_stmt .

    $default  reduce using rule 12 (fun_declaration)


State 38

   21 param: INT ID $@6 LBRACK . RBRACK

    RBRACK  shift, and go to state 41


State 39

   22 compound_stmt: LCBRACK local_declarations . statement_list RCBRACK
   23 local_declarations: local_declarations . var_declaration

    INT  shift, and go to state 42

    $default  reduce using rule 26 (statement_list)

    var_declaration  go to state 43
    statement_list   go to state 44


State 40

   10 var_declaration: INT ID $@2 LBRACK NUM $@3 RBRACK SEMI .

    $default  reduce using rule 10 (var_declaration)


State 41

   21 param: INT ID $@6 LBRACK RBRACK .

    $default  reduce using rule 21 (param)


State 42

    7 var_declaration: INT . ID $@1 SEMI
   10                | INT . ID $@2 LBRACK NUM $@3 RBRACK SEMI

    ID  shift, and go to state 45


State 43

   23 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 23 (local_declarations)


State 44

   22 compound_stmt: LCBRACK local_declarations statement_list . RCBRACK
   25 statement_list: statement_list . statement

    error    shift, and go to state 46
    IF       shift, and go to state 47
    WHILE    shift, and go to state 48
    RETURN   shift, and go to state 49
    ID       shift, and go to state 50
    NUM      shift, and go to state 51
    LPAREN   shift, and go to state 52
    SEMI     shift, and go to state 53
    LCBRACK  shift, and go to state 33
    RCBRACK  shift, and go to state 54

    compound_stmt        go to state 55
    statement            go to state 56
    expression_stmt      go to state 57
    selection_stmt       go to state 58
    iteration_stmt       go to state 59
    return_stmt          go to state 60
    expression           go to state 61
    var                  go to state 62
    simple_expression    go to state 63
    additive_expression  go to state 64
    term                 go to state 65
    factor               go to state 66
    call                 go to state 67


State 45

    7 var_declaration: INT ID . $@1 SEMI
   10                | INT ID . $@2 LBRACK NUM $@3 RBRACK SEMI

    LBRACK    reduce using rule 8 ($@2)
    $default  reduce using rule 6 ($@1)

    $@1  go to state 13
    $@2  go to state 14


State 46

   61 factor: error .

    $default  reduce using rule 61 (factor)


State 47

   34 selection_stmt: IF . LPAREN expression RPAREN statement
   35               | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 68


State 48

   36 iteration_stmt: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 69


State 49

   37 return_stmt: RETURN . SEMI
   38            | RETURN . expression SEMI

    error   shift, and go to state 46
    ID      shift, and go to state 50
    NUM     shift, and go to state 51
    LPAREN  shift, and go to state 52
    SEMI    shift, and go to state 70

    expression           go to state 71
    var                  go to state 62
    simple_expression    go to state 63
    additive_expression  go to state 64
    term                 go to state 65
    factor               go to state 66
    call                 go to state 67


State 50

   41 var: ID .
   43    | ID . $@7 LBRACK expression RBRACK
   63 call: ID . $@8 LPAREN args RPAREN

    LPAREN    reduce using rule 62 ($@8)
    LBRACK    reduce using rule 42 ($@7)
    $default  reduce using rule 41 (var)

    $@7  go to state 72
    $@8  go to state 73


State 51

   60 factor: NUM .

    $default  reduce using rule 60 (factor)


State 52

   57 factor: LPAREN . expression RPAREN

    error   shift, and go to state 46
    ID      shift, and go to state 50
    NUM     shift, and go to state 51
    LPAREN  shift, and go to state 52

    expression           go to state 74
    var                  go to state 62
    simple_expression    go to state 63
    additive_expression  go to state 64
    term                 go to state 65
    factor               go to state 66
    call                 go to state 67


State 53

   33 expression_stmt: SEMI .

    $default  reduce using rule 33 (expression_stmt)


State 54

   22 compound_stmt: LCBRACK local_declarations statement_list RCBRACK .

    $default  reduce using rule 22 (compound_stmt)


State 55

   28 statement: compound_stmt .

    $default  reduce using rule 28 (statement)


State 56

   25 statement_list: statement_list statement .

    $default  reduce using rule 25 (statement_list)


State 57

   27 statement: expression_stmt .

    $default  reduce using rule 27 (statement)


State 58

   29 statement: selection_stmt .

    $default  reduce using rule 29 (statement)


State 59

   30 statement: iteration_stmt .

    $default  reduce using rule 30 (statement)


State 60

   31 statement: return_stmt .

    $default  reduce using rule 31 (statement)


State 61

   32 expression_stmt: expression . SEMI

    SEMI  shift, and go to state 75


State 62

   39 expression: var . ASSIGN expression
   58 factor: var .

    ASSIGN  shift, and go to state 76

    $default  reduce using rule 58 (factor)


State 63

   40 expression: simple_expression .

    $default  reduce using rule 40 (expression)


State 64

   44 simple_expression: additive_expression . LE additive_expression
   45                  | additive_expression . LT additive_expression
   46                  | additive_expression . GT additive_expression
   47                  | additive_expression . GE additive_expression
   48                  | additive_expression . EQ additive_expression
   49                  | additive_expression . NQ additive_expression
   50                  | additive_expression .
   51 additive_expression: additive_expression . PLUS term
   52                    | additive_expression . MINUS term

    EQ     shift, and go to state 77
    NQ     shift, and go to state 78
    LT     shift, and go to state 79
    GT     shift, and go to state 80
    LE     shift, and go to state 81
    GE     shift, and go to state 82
    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 50 (simple_expression)


State 65

   53 additive_expression: term .
   54 term: term . TIMES factor
   55     | term . OVER factor

    TIMES  shift, and go to state 85
    OVER   shift, and go to state 86

    $default  reduce using rule 53 (additive_expression)


State 66

   56 term: factor .

    $default  reduce using rule 56 (term)


State 67

   59 factor: call .

    $default  reduce using rule 59 (factor)


State 68

   34 selection_stmt: IF LPAREN . expression RPAREN statement
   35               | IF LPAREN . expression RPAREN statement ELSE statement

    error   shift, and go to state 46
    ID      shift, and go to state 50
    NUM     shift, and go to state 51
    LPAREN  shift, and go to state 52

    expression           go to state 87
    var                  go to state 62
    simple_expression    go to state 63
    additive_expression  go to state 64
    term                 go to state 65
    factor               go to state 66
    call                 go to state 67


State 69

   36 iteration_stmt: WHILE LPAREN . expression RPAREN statement

    error   shift, and go to state 46
    ID      shift, and go to state 50
    NUM     shift, and go to state 51
    LPAREN  shift, and go to state 52

    expression           go to state 88
    var                  go to state 62
    simple_expression    go to state 63
    additive_expression  go to state 64
    term                 go to state 65
    factor               go to state 66
    call                 go to state 67


State 70

   37 return_stmt: RETURN SEMI .

    $default  reduce using rule 37 (return_stmt)


State 71

   38 return_stmt: RETURN expression . SEMI

    SEMI  shift, and go to state 89


State 72

   43 var: ID $@7 . LBRACK expression RBRACK

    LBRACK  shift, and go to state 90


State 73

   63 call: ID $@8 . LPAREN args RPAREN

    LPAREN  shift, and go to state 91


State 74

   57 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 92


State 75

   32 expression_stmt: expression SEMI .

    $default  reduce using rule 32 (expression_stmt)


State 76

   39 expression: var ASSIGN . expression

    error   shift, and go to state 46
    ID      shift, and go to state 50
    NUM     shift, and go to state 51
    LPAREN  shift, and go to state 52

    expression           go to state 93
    var                  go to state 62
    simple_expression    go to state 63
    additive_expression  go to state 64
    term                 go to state 65
    factor               go to state 66
    call                 go to state 67


State 77

   48 simple_expression: additive_expression EQ . additive_expression

    error   shift, and go to state 46
    ID      shift, and go to state 50
    NUM     shift, and go to state 51
    LPAREN  shift, and go to state 52

    var                  go to state 94
    additive_expression  go to state 95
    term                 go to state 65
    factor               go to state 66
    call                 go to state 67


State 78

   49 simple_expression: additive_expression NQ . additive_expression

    error   shift, and go to state 46
    ID      shift, and go to state 50
    NUM     shift, and go to state 51
    LPAREN  shift, and go to state 52

    var                  go to state 94
    additive_expression  go to state 96
    term                 go to state 65
    factor               go to state 66
    call                 go to state 67


State 79

   45 simple_expression: additive_expression LT . additive_expression

    error   shift, and go to state 46
    ID      shift, and go to state 50
    NUM     shift, and go to state 51
    LPAREN  shift, and go to state 52

    var                  go to state 94
    additive_expression  go to state 97
    term                 go to state 65
    factor               go to state 66
    call                 go to state 67


State 80

   46 simple_expression: additive_expression GT . additive_expression

    error   shift, and go to state 46
    ID      shift, and go to state 50
    NUM     shift, and go to state 51
    LPAREN  shift, and go to state 52

    var                  go to state 94
    additive_expression  go to state 98
    term                 go to state 65
    factor               go to state 66
    call                 go to state 67


State 81

   44 simple_expression: additive_expression LE . additive_expression

    error   shift, and go to state 46
    ID      shift, and go to state 50
    NUM     shift, and go to state 51
    LPAREN  shift, and go to state 52

    var                  go to state 94
    additive_expression  go to state 99
    term                 go to state 65
    factor               go to state 66
    call                 go to state 67


State 82

   47 simple_expression: additive_expression GE . additive_expression

    error   shift, and go to state 46
    ID      shift, and go to state 50
    NUM     shift, and go to state 51
    LPAREN  shift, and go to state 52

    var                  go to state 94
    additive_expression  go to state 100
    term                 go to state 65
    factor               go to state 66
    call                 go to state 67


State 83

   51 additive_expression: additive_expression PLUS . term

    error   shift, and go to state 46
    ID      shift, and go to state 50
    NUM     shift, and go to state 51
    LPAREN  shift, and go to state 52

    var     go to state 94
    term    go to state 101
    factor  go to state 66
    call    go to state 67


State 84

   52 additive_expression: additive_expression MINUS . term

    error   shift, and go to state 46
    ID      shift, and go to state 50
    NUM     shift, and go to state 51
    LPAREN  shift, and go to state 52

    var     go to state 94
    term    go to state 102
    factor  go to state 66
    call    go to state 67


State 85

   54 term: term TIMES . factor

    error   shift, and go to state 46
    ID      shift, and go to state 50
    NUM     shift, and go to state 51
    LPAREN  shift, and go to state 52

    var     go to state 94
    factor  go to state 103
    call    go to state 67


State 86

   55 term: term OVER . factor

    error   shift, and go to state 46
    ID      shift, and go to state 50
    NUM     shift, and go to state 51
    LPAREN  shift, and go to state 52

    var     go to state 94
    factor  go to state 104
    call    go to state 67


State 87

   34 selection_stmt: IF LPAREN expression . RPAREN statement
   35               | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 105


State 88

   36 iteration_stmt: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 106


State 89

   38 return_stmt: RETURN expression SEMI .

    $default  reduce using rule 38 (return_stmt)


State 90

   43 var: ID $@7 LBRACK . expression RBRACK

    error   shift, and go to state 46
    ID      shift, and go to state 50
    NUM     shift, and go to state 51
    LPAREN  shift, and go to state 52

    expression           go to state 107
    var                  go to state 62
    simple_expression    go to state 63
    additive_expression  go to state 64
    term                 go to state 65
    factor               go to state 66
    call                 go to state 67


State 91

   63 call: ID $@8 LPAREN . args RPAREN

    error   shift, and go to state 46
    ID      shift, and go to state 50
    NUM     shift, and go to state 51
    LPAREN  shift, and go to state 52

    RPAREN  reduce using rule 65 (args)

    expression           go to state 108
    var                  go to state 62
    simple_expression    go to state 63
    additive_expression  go to state 64
    term                 go to state 65
    factor               go to state 66
    call                 go to state 67
    args                 go to state 109
    arg_list             go to state 110


State 92

   57 factor: LPAREN expression RPAREN .

    $default  reduce using rule 57 (factor)


State 93

   39 expression: var ASSIGN expression .

    $default  reduce using rule 39 (expression)


State 94

   58 factor: var .

    $default  reduce using rule 58 (factor)


State 95

   48 simple_expression: additive_expression EQ additive_expression .
   51 additive_expression: additive_expression . PLUS term
   52                    | additive_expression . MINUS term

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 48 (simple_expression)


State 96

   49 simple_expression: additive_expression NQ additive_expression .
   51 additive_expression: additive_expression . PLUS term
   52                    | additive_expression . MINUS term

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 49 (simple_expression)


State 97

   45 simple_expression: additive_expression LT additive_expression .
   51 additive_expression: additive_expression . PLUS term
   52                    | additive_expression . MINUS term

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 45 (simple_expression)


State 98

   46 simple_expression: additive_expression GT additive_expression .
   51 additive_expression: additive_expression . PLUS term
   52                    | additive_expression . MINUS term

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 46 (simple_expression)


State 99

   44 simple_expression: additive_expression LE additive_expression .
   51 additive_expression: additive_expression . PLUS term
   52                    | additive_expression . MINUS term

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 44 (simple_expression)


State 100

   47 simple_expression: additive_expression GE additive_expression .
   51 additive_expression: additive_expression . PLUS term
   52                    | additive_expression . MINUS term

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 47 (simple_expression)


State 101

   51 additive_expression: additive_expression PLUS term .
   54 term: term . TIMES factor
   55     | term . OVER factor

    TIMES  shift, and go to state 85
    OVER   shift, and go to state 86

    $default  reduce using rule 51 (additive_expression)


State 102

   52 additive_expression: additive_expression MINUS term .
   54 term: term . TIMES factor
   55     | term . OVER factor

    TIMES  shift, and go to state 85
    OVER   shift, and go to state 86

    $default  reduce using rule 52 (additive_expression)


State 103

   54 term: term TIMES factor .

    $default  reduce using rule 54 (term)


State 104

   55 term: term OVER factor .

    $default  reduce using rule 55 (term)


State 105

   34 selection_stmt: IF LPAREN expression RPAREN . statement
   35               | IF LPAREN expression RPAREN . statement ELSE statement

    error    shift, and go to state 46
    IF       shift, and go to state 47
    WHILE    shift, and go to state 48
    RETURN   shift, and go to state 49
    ID       shift, and go to state 50
    NUM      shift, and go to state 51
    LPAREN   shift, and go to state 52
    SEMI     shift, and go to state 53
    LCBRACK  shift, and go to state 33

    compound_stmt        go to state 55
    statement            go to state 111
    expression_stmt      go to state 57
    selection_stmt       go to state 58
    iteration_stmt       go to state 59
    return_stmt          go to state 60
    expression           go to state 61
    var                  go to state 62
    simple_expression    go to state 63
    additive_expression  go to state 64
    term                 go to state 65
    factor               go to state 66
    call                 go to state 67


State 106

   36 iteration_stmt: WHILE LPAREN expression RPAREN . statement

    error    shift, and go to state 46
    IF       shift, and go to state 47
    WHILE    shift, and go to state 48
    RETURN   shift, and go to state 49
    ID       shift, and go to state 50
    NUM      shift, and go to state 51
    LPAREN   shift, and go to state 52
    SEMI     shift, and go to state 53
    LCBRACK  shift, and go to state 33

    compound_stmt        go to state 55
    statement            go to state 112
    expression_stmt      go to state 57
    selection_stmt       go to state 58
    iteration_stmt       go to state 59
    return_stmt          go to state 60
    expression           go to state 61
    var                  go to state 62
    simple_expression    go to state 63
    additive_expression  go to state 64
    term                 go to state 65
    factor               go to state 66
    call                 go to state 67


State 107

   43 var: ID $@7 LBRACK expression . RBRACK

    RBRACK  shift, and go to state 113


State 108

   67 arg_list: expression .

    $default  reduce using rule 67 (arg_list)


State 109

   63 call: ID $@8 LPAREN args . RPAREN

    RPAREN  shift, and go to state 114


State 110

   64 args: arg_list .
   66 arg_list: arg_list . COMMA expression

    COMMA  shift, and go to state 115

    $default  reduce using rule 64 (args)


State 111

   34 selection_stmt: IF LPAREN expression RPAREN statement .
   35               | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 116

    ELSE      [reduce using rule 34 (selection_stmt)]
    $default  reduce using rule 34 (selection_stmt)


State 112

   36 iteration_stmt: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 36 (iteration_stmt)


State 113

   43 var: ID $@7 LBRACK expression RBRACK .

    $default  reduce using rule 43 (var)


State 114

   63 call: ID $@8 LPAREN args RPAREN .

    $default  reduce using rule 63 (call)


State 115

   66 arg_list: arg_list COMMA . expression

    error   shift, and go to state 46
    ID      shift, and go to state 50
    NUM     shift, and go to state 51
    LPAREN  shift, and go to state 52

    expression           go to state 117
    var                  go to state 62
    simple_expression    go to state 63
    additive_expression  go to state 64
    term                 go to state 65
    factor               go to state 66
    call                 go to state 67


State 116

   35 selection_stmt: IF LPAREN expression RPAREN statement ELSE . statement

    error    shift, and go to state 46
    IF       shift, and go to state 47
    WHILE    shift, and go to state 48
    RETURN   shift, and go to state 49
    ID       shift, and go to state 50
    NUM      shift, and go to state 51
    LPAREN   shift, and go to state 52
    SEMI     shift, and go to state 53
    LCBRACK  shift, and go to state 33

    compound_stmt        go to state 55
    statement            go to state 118
    expression_stmt      go to state 57
    selection_stmt       go to state 58
    iteration_stmt       go to state 59
    return_stmt          go to state 60
    expression           go to state 61
    var                  go to state 62
    simple_expression    go to state 63
    additive_expression  go to state 64
    term                 go to state 65
    factor               go to state 66
    call                 go to state 67


State 117

   66 arg_list: arg_list COMMA expression .

    $default  reduce using rule 66 (arg_list)


State 118

   35 selection_stmt: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 35 (selection_stmt)
